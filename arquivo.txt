[PASS] proveFail_ApproveFromZeroAddress(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[PASS] proveFail_ApproveToZeroAddress(address,uint256) (paths: 4, time: 0.02s, bounds: [])
[ERROR] proveFail_ApproveZeroAddress(address,uint256) (paths: 3, time: 0.02s, bounds: [])
[ERROR] proveFail_ApproveZeroAddressForMSGSender(address,uint256) (paths: 2, time: 0.01s, bounds: [])
[PASS] proveFail_BurnFromZeroAddress(uint256) (paths: 2, time: 0.01s, bounds: [])
[PASS] proveFail_BurnUnderBalance(address,uint256) (paths: 4, time: 0.04s, bounds: [])
[ERROR] proveFail_BurnUnderSupply(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[ERROR] proveFail_DecreaseAllowanceUnderAllowance(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[ERROR] proveFail_IncreaseAllowanceUnderAllowance(address,uint256) (paths: 3, time: 0.02s, bounds: [])
[PASS] proveFail_MintOverflow(address) (paths: 3, time: 0.03s, bounds: [])
[PASS] proveFail_MintToZeroAddress(uint256) (paths: 2, time: 0.01s, bounds: [])
[ERROR] proveFail_MintUnderSupply(address,uint256) (paths: 3, time: 0.02s, bounds: [])
[ERROR] proveFail_TransferFromNotEnoughAmount(address,address,uint256) (paths: 6, time: 0.05s, bounds: [])
[PASS] proveFail_TransferFromToZeroAddress(address,address,uint256) (paths: 8, time: 0.08s, bounds: [])
[PASS] proveFail_TransferFromUnderBalance(address,address,uint256) (paths: 11, time: 0.18s, bounds: [])
[ERROR] proveFail_TransferFromUnderBalancei(address,address,uint256) (paths: 6, time: 0.05s, bounds: [])
[PASS] proveFail_TransferFromZeroAddress(address,address,uint256) (paths: 6, time: 0.03s, bounds: [])
[PASS] proveFail_TransferFromZeroAddress(address,uint256) (paths: 4, time: 0.02s, bounds: [])
[ERROR] proveFail_TransferFromZeroAddressForMSGSender(address,address,uint256) (paths: 3, time: 0.01s, bounds: [])
[PASS] proveFail_TransferToZeroAddress(address,uint256) (paths: 4, time: 0.04s, bounds: [])
[PASS] proveFail_TransferUnderBalance(address,uint256) (paths: 6, time: 0.09s, bounds: [])
[ERROR] proveFail_TransferUnderBalancej(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[PASS] prove_AllowanceUpdatedAfterBurn(address,address,uint256) (paths: 8, time: 0.07s, bounds: [])
[PASS] prove_Approve(address,uint256) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_ApproveMaxAmount(address,address) (paths: 5, time: 0.04s, bounds: [])
[PASS] prove_ApproveNonZeroAmount(address,address,uint256) (paths: 6, time: 0.04s, bounds: [])
[PASS] prove_ApproveZeroAmount(address,address) (paths: 5, time: 0.04s, bounds: [])
[PASS] prove_BalanceUpdatedAfterBurn(address,address,uint256) (paths: 7, time: 0.10s, bounds: [])
[PASS] prove_BurnDifferentAccount(address,uint256,address,uint256) (paths: 8, time: 0.12s, bounds: [])
[PASS] prove_BurnFromNonZeroAddress(address,uint256) (paths: 4, time: 0.05s, bounds: [])
[PASS] prove_BurnSameAccount(address,uint256) (paths: 3, time: 0.06s, bounds: [])
[PASS] prove_BurnZeroTokens(address) (paths: 3, time: 0.04s, bounds: [])
[PASS] prove_ConsecutiveApprovePositiveToPositive(address,address,uint256,uint256) (paths: 5, time: 0.06s, bounds: [])
[PASS] prove_DecreaseAllowance(address,uint256) (paths: 4, time: 0.08s, bounds: [])
[PASS] prove_IncreaseAllowance(address,uint256) (paths: 3, time: 0.07s, bounds: [])
[PASS] prove_Mint(address,uint256) (paths: 3, time: 0.05s, bounds: [])
[PASS] prove_MintZeroTokens(address) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_MsgSenderCanRetrieveOtherBalance(address,uint256) (paths: 5, time: 0.03s, bounds: [])
[PASS] prove_MsgSenderCanRetrieveOwnBalance(uint256) (paths: 1, time: 0.02s, bounds: [])
[PASS] prove_MsgSenderCanTransferTotalBalance(address,address,uint256) (paths: 7, time: 0.09s, bounds: [])
[PASS] prove_MsgSenderCanTransferTotalBalanceZero(address,address) (paths: 6, time: 0.07s, bounds: [])
[PASS] prove_MultipleTransferFromAllowed(address,address,address,uint256,uint256) (paths: 16, time: 0.31s, bounds: [])
[PASS] prove_MultipleTransferFromsOfZeroAmountAllowed(address,address,address,uint8) (paths: 15, time: 0.19s, bounds: [])
[PASS] prove_MultipleTransfersAllowed(address,address,uint256,uint256) (paths: 9, time: 0.13s, bounds: [])
[PASS] prove_MultipleTransfersOfZeroAmountAllowed(address,address,uint8) (paths: 11, time: 0.16s, bounds: [])
[PASS] prove_SelfApproveAndTransferFromOwnAccount(address,address,uint256) (paths: 9, time: 0.17s, bounds: [])
[PASS] prove_SelfApproveAndTransferFromOwnAccountZeroAmountAllowed(address,address) (paths: 6, time: 0.11s, bounds: [])
[PASS] prove_SelfApprovePositiveAmount(address,uint256) (paths: 4, time: 0.04s, bounds: [])
[PASS] prove_SelfApproveZeroAmountAllowed(address) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_SelfTransferPositiveAmountAllowed(address,uint256) (paths: 4, time: 0.06s, bounds: [])
[PASS] prove_SelfTransferZeroAmountAllowed(address) (paths: 3, time: 0.04s, bounds: [])
[PASS] prove_TokenReceiverCanTransferFromTotalBalance(address,address,uint256) (paths: 10, time: 0.17s, bounds: [])
[PASS] prove_TokenReceiverCanTransferFromTotalBalanceZero(address,address,address) (paths: 11, time: 0.14s, bounds: [])
[PASS] prove_Transfer(address,uint256,uint256) (paths: 6, time: 0.10s, bounds: [])
[PASS] prove_TransferDoesNotUpdateOtherBalances(address,address,address,uint256) (paths: 4, time: 0.14s, bounds: [])
[PASS] prove_TransferFrom(address,address,uint256,uint256) (paths: 7, time: 0.17s, bounds: [])
[PASS] prove_TransferFromAllowanceReachesZero(address,address,address,uint256,uint256) (paths: 15, time: 0.20s, bounds: [])
[PASS] prove_TransferFromDecreasesAllowance(address,address,address,uint256) (paths: 4, time: 0.15s, bounds: [])
[PASS] prove_TransferFromDoesNotUpdateOtherBalances(address,address,address,address,uint256) (paths: 18, time: 0.29s, bounds: [])
[PASS] prove_TransferFromNoFees(address,address,address,uint256) (paths: 12, time: 0.18s, bounds: [])
[PASS] prove_TransferFromZeroAmount(address,address,address) (paths: 8, time: 0.09s, bounds: [])
[ERROR] prove_TransferFromZeroAmountToZeroAddressReverts(address,address) (paths: 6, time: 0.05s, bounds: [])
[PASS] prove_TransferZeroAmount(address,address) (paths: 6, time: 0.07s, bounds: [])
[ERROR] prove_TransferZeroAmountToZeroAddressReverts(address) (paths: 3, time: 0.01s, bounds: [])
[PASS] prove_ZeroAddressHasNoToken() (paths: 1, time: 0.01s, bounds: [])
[PASS] proveFail_ApproveFromZeroAddress(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[PASS] proveFail_ApproveToZeroAddress(address,uint256) (paths: 4, time: 0.02s, bounds: [])
[ERROR] proveFail_ApproveZeroAddress(address,uint256) (paths: 3, time: 0.02s, bounds: [])
[ERROR] proveFail_ApproveZeroAddressForMSGSender(address,uint256) (paths: 2, time: 0.01s, bounds: [])
[PASS] proveFail_BurnFromZeroAddress(uint256) (paths: 2, time: 0.01s, bounds: [])
[PASS] proveFail_BurnUnderBalance(address,uint256) (paths: 4, time: 0.04s, bounds: [])
[ERROR] proveFail_BurnUnderSupply(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[ERROR] proveFail_DecreaseAllowanceUnderAllowance(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[ERROR] proveFail_IncreaseAllowanceUnderAllowance(address,uint256) (paths: 3, time: 0.02s, bounds: [])
[PASS] proveFail_MintOverflow(address) (paths: 3, time: 0.03s, bounds: [])
[PASS] proveFail_MintToZeroAddress(uint256) (paths: 2, time: 0.01s, bounds: [])
[ERROR] proveFail_MintUnderSupply(address,uint256) (paths: 3, time: 0.02s, bounds: [])
[ERROR] proveFail_TransferFromNotEnoughAmount(address,address,uint256) (paths: 6, time: 0.05s, bounds: [])
[PASS] proveFail_TransferFromToZeroAddress(address,address,uint256) (paths: 8, time: 0.08s, bounds: [])
[PASS] proveFail_TransferFromUnderBalance(address,address,uint256) (paths: 11, time: 0.18s, bounds: [])
[ERROR] proveFail_TransferFromUnderBalancei(address,address,uint256) (paths: 6, time: 0.06s, bounds: [])
[PASS] proveFail_TransferFromZeroAddress(address,address,uint256) (paths: 6, time: 0.03s, bounds: [])
[PASS] proveFail_TransferFromZeroAddress(address,uint256) (paths: 4, time: 0.02s, bounds: [])
[ERROR] proveFail_TransferFromZeroAddressForMSGSender(address,address,uint256) (paths: 3, time: 0.01s, bounds: [])
[PASS] proveFail_TransferToZeroAddress(address,uint256) (paths: 4, time: 0.04s, bounds: [])
[PASS] proveFail_TransferUnderBalance(address,uint256) (paths: 6, time: 0.09s, bounds: [])
[ERROR] proveFail_TransferUnderBalancej(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[PASS] prove_AllowanceUpdatedAfterBurn(address,address,uint256) (paths: 8, time: 0.07s, bounds: [])
[PASS] prove_Approve(address,uint256) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_ApproveMaxAmount(address,address) (paths: 5, time: 0.04s, bounds: [])
[PASS] prove_ApproveNonZeroAmount(address,address,uint256) (paths: 6, time: 0.04s, bounds: [])
[PASS] prove_ApproveZeroAmount(address,address) (paths: 5, time: 0.04s, bounds: [])
[PASS] prove_BalanceUpdatedAfterBurn(address,address,uint256) (paths: 7, time: 0.10s, bounds: [])
[PASS] prove_BurnDifferentAccount(address,uint256,address,uint256) (paths: 8, time: 0.12s, bounds: [])
[PASS] prove_BurnFromNonZeroAddress(address,uint256) (paths: 4, time: 0.05s, bounds: [])
[PASS] prove_BurnSameAccount(address,uint256) (paths: 3, time: 0.06s, bounds: [])
[PASS] prove_BurnZeroTokens(address) (paths: 3, time: 0.04s, bounds: [])
[PASS] prove_ConsecutiveApprovePositiveToPositive(address,address,uint256,uint256) (paths: 5, time: 0.06s, bounds: [])
[PASS] prove_DecreaseAllowance(address,uint256) (paths: 4, time: 0.08s, bounds: [])
[PASS] prove_IncreaseAllowance(address,uint256) (paths: 3, time: 0.07s, bounds: [])
[PASS] prove_Mint(address,uint256) (paths: 3, time: 0.05s, bounds: [])
[PASS] prove_MintZeroTokens(address) (paths: 3, time: 0.04s, bounds: [])
[PASS] prove_MsgSenderCanRetrieveOtherBalance(address,uint256) (paths: 5, time: 0.03s, bounds: [])
[PASS] prove_MsgSenderCanRetrieveOwnBalance(uint256) (paths: 1, time: 0.02s, bounds: [])
[PASS] prove_MsgSenderCanTransferTotalBalance(address,address,uint256) (paths: 7, time: 0.09s, bounds: [])
[PASS] prove_MsgSenderCanTransferTotalBalanceZero(address,address) (paths: 6, time: 0.07s, bounds: [])
[PASS] prove_MultipleTransferFromAllowed(address,address,address,uint256,uint256) (paths: 16, time: 0.31s, bounds: [])
[PASS] prove_MultipleTransferFromsOfZeroAmountAllowed(address,address,address,uint8) (paths: 15, time: 0.21s, bounds: [])
[PASS] prove_MultipleTransfersAllowed(address,address,uint256,uint256) (paths: 9, time: 0.13s, bounds: [])
[PASS] prove_MultipleTransfersOfZeroAmountAllowed(address,address,uint8) (paths: 11, time: 0.14s, bounds: [])
[PASS] prove_SelfApproveAndTransferFromOwnAccount(address,address,uint256) (paths: 10, time: 0.17s, bounds: [])
[PASS] prove_SelfApproveAndTransferFromOwnAccountZeroAmountAllowed(address,address) (paths: 6, time: 0.10s, bounds: [])
[PASS] prove_SelfApprovePositiveAmount(address,uint256) (paths: 4, time: 0.04s, bounds: [])
[PASS] prove_SelfApproveZeroAmountAllowed(address) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_SelfTransferPositiveAmountAllowed(address,uint256) (paths: 4, time: 0.06s, bounds: [])
[PASS] prove_SelfTransferZeroAmountAllowed(address) (paths: 3, time: 0.04s, bounds: [])
[PASS] prove_TokenReceiverCanTransferFromTotalBalance(address,address,uint256) (paths: 10, time: 0.17s, bounds: [])
[PASS] prove_TokenReceiverCanTransferFromTotalBalanceZero(address,address,address) (paths: 10, time: 0.11s, bounds: [])
[PASS] prove_Transfer(address,uint256,uint256) (paths: 6, time: 0.10s, bounds: [])
[PASS] prove_TransferDoesNotUpdateOtherBalances(address,address,address,uint256) (paths: 4, time: 0.14s, bounds: [])
[PASS] prove_TransferFrom(address,address,uint256,uint256) (paths: 7, time: 0.16s, bounds: [])
[PASS] prove_TransferFromAllowanceReachesZero(address,address,address,uint256,uint256) (paths: 15, time: 0.21s, bounds: [])
[PASS] prove_TransferFromDecreasesAllowance(address,address,address,uint256) (paths: 4, time: 0.15s, bounds: [])
[PASS] prove_TransferFromDoesNotUpdateOtherBalances(address,address,address,address,uint256) (paths: 18, time: 0.18s, bounds: [])
[PASS] prove_TransferFromNoFees(address,address,address,uint256) (paths: 12, time: 0.29s, bounds: [])
[PASS] prove_TransferFromZeroAmount(address,address,address) (paths: 8, time: 0.09s, bounds: [])
[ERROR] prove_TransferFromZeroAmountToZeroAddressReverts(address,address) (paths: 6, time: 0.05s, bounds: [])
[PASS] prove_TransferZeroAmount(address,address) (paths: 6, time: 0.07s, bounds: [])
[ERROR] prove_TransferZeroAmountToZeroAddressReverts(address) (paths: 3, time: 0.01s, bounds: [])
[PASS] prove_ZeroAddressHasNoToken() (paths: 1, time: 0.01s, bounds: [])
[PASS] proveFail_ApproveFromZeroAddress(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[PASS] proveFail_ApproveToZeroAddress(address,uint256) (paths: 4, time: 0.02s, bounds: [])
[ERROR] proveFail_ApproveZeroAddress(address,uint256) (paths: 3, time: 0.02s, bounds: [])
[ERROR] proveFail_ApproveZeroAddressForMSGSender(address,uint256) (paths: 2, time: 0.01s, bounds: [])
[PASS] proveFail_BurnFromZeroAddress(uint256) (paths: 2, time: 0.01s, bounds: [])
[PASS] proveFail_BurnUnderBalance(address,uint256) (paths: 4, time: 0.04s, bounds: [])
[ERROR] proveFail_BurnUnderSupply(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[ERROR] proveFail_DecreaseAllowanceUnderAllowance(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[ERROR] proveFail_IncreaseAllowanceUnderAllowance(address,uint256) (paths: 3, time: 0.02s, bounds: [])
[PASS] proveFail_MintOverflow(address) (paths: 3, time: 0.03s, bounds: [])
[PASS] proveFail_MintToZeroAddress(uint256) (paths: 2, time: 0.01s, bounds: [])
[ERROR] proveFail_MintUnderSupply(address,uint256) (paths: 3, time: 0.02s, bounds: [])
[ERROR] proveFail_TransferFromNotEnoughAmount(address,address,uint256) (paths: 6, time: 0.04s, bounds: [])
[PASS] proveFail_TransferFromToZeroAddress(address,address,uint256) (paths: 8, time: 0.08s, bounds: [])
[PASS] proveFail_TransferFromUnderBalance(address,address,uint256) (paths: 11, time: 0.18s, bounds: [])
[ERROR] proveFail_TransferFromUnderBalancei(address,address,uint256) (paths: 6, time: 0.05s, bounds: [])
[PASS] proveFail_TransferFromZeroAddress(address,address,uint256) (paths: 6, time: 0.03s, bounds: [])
[PASS] proveFail_TransferFromZeroAddress(address,uint256) (paths: 4, time: 0.02s, bounds: [])
[ERROR] proveFail_TransferFromZeroAddressForMSGSender(address,address,uint256) (paths: 3, time: 0.01s, bounds: [])
[PASS] proveFail_TransferToZeroAddress(address,uint256) (paths: 4, time: 0.04s, bounds: [])
[PASS] proveFail_TransferUnderBalance(address,uint256) (paths: 6, time: 0.09s, bounds: [])
[ERROR] proveFail_TransferUnderBalancej(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[PASS] prove_AllowanceUpdatedAfterBurn(address,address,uint256) (paths: 8, time: 0.07s, bounds: [])
[PASS] prove_Approve(address,uint256) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_ApproveMaxAmount(address,address) (paths: 5, time: 0.04s, bounds: [])
[PASS] prove_ApproveNonZeroAmount(address,address,uint256) (paths: 6, time: 0.04s, bounds: [])
[PASS] prove_ApproveZeroAmount(address,address) (paths: 5, time: 0.04s, bounds: [])
[PASS] prove_BalanceUpdatedAfterBurn(address,address,uint256) (paths: 7, time: 0.10s, bounds: [])
[PASS] prove_BurnDifferentAccount(address,uint256,address,uint256) (paths: 8, time: 0.12s, bounds: [])
[PASS] prove_BurnFromNonZeroAddress(address,uint256) (paths: 4, time: 0.05s, bounds: [])
[PASS] prove_BurnSameAccount(address,uint256) (paths: 3, time: 0.06s, bounds: [])
[PASS] prove_BurnZeroTokens(address) (paths: 3, time: 0.04s, bounds: [])
[PASS] prove_ConsecutiveApprovePositiveToPositive(address,address,uint256,uint256) (paths: 5, time: 0.06s, bounds: [])
[PASS] prove_DecreaseAllowance(address,uint256) (paths: 4, time: 0.08s, bounds: [])
[PASS] prove_IncreaseAllowance(address,uint256) (paths: 3, time: 0.07s, bounds: [])
[PASS] prove_Mint(address,uint256) (paths: 3, time: 0.05s, bounds: [])
[PASS] prove_MintZeroTokens(address) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_MsgSenderCanRetrieveOtherBalance(address,uint256) (paths: 5, time: 0.03s, bounds: [])
[PASS] prove_MsgSenderCanRetrieveOwnBalance(uint256) (paths: 1, time: 0.02s, bounds: [])
[PASS] prove_MsgSenderCanTransferTotalBalance(address,address,uint256) (paths: 7, time: 0.09s, bounds: [])
[PASS] prove_MsgSenderCanTransferTotalBalanceZero(address,address) (paths: 6, time: 0.07s, bounds: [])
[PASS] prove_MultipleTransferFromAllowed(address,address,address,uint256,uint256) (paths: 16, time: 0.31s, bounds: [])
[PASS] prove_MultipleTransferFromsOfZeroAmountAllowed(address,address,address,uint8) (paths: 15, time: 0.19s, bounds: [])
[PASS] prove_MultipleTransfersAllowed(address,address,uint256,uint256) (paths: 9, time: 0.13s, bounds: [])
[PASS] prove_MultipleTransfersOfZeroAmountAllowed(address,address,uint8) (paths: 11, time: 0.17s, bounds: [])
[PASS] prove_SelfApproveAndTransferFromOwnAccount(address,address,uint256) (paths: 10, time: 0.17s, bounds: [])
[PASS] prove_SelfApproveAndTransferFromOwnAccountZeroAmountAllowed(address,address) (paths: 6, time: 0.10s, bounds: [])
[PASS] prove_SelfApprovePositiveAmount(address,uint256) (paths: 4, time: 0.04s, bounds: [])
[PASS] prove_SelfApproveZeroAmountAllowed(address) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_SelfTransferPositiveAmountAllowed(address,uint256) (paths: 4, time: 0.06s, bounds: [])
[PASS] prove_SelfTransferZeroAmountAllowed(address) (paths: 3, time: 0.04s, bounds: [])
[PASS] prove_TokenReceiverCanTransferFromTotalBalance(address,address,uint256) (paths: 9, time: 0.17s, bounds: [])
[PASS] prove_TokenReceiverCanTransferFromTotalBalanceZero(address,address,address) (paths: 10, time: 0.11s, bounds: [])
[PASS] prove_Transfer(address,uint256,uint256) (paths: 6, time: 0.10s, bounds: [])
[PASS] prove_TransferDoesNotUpdateOtherBalances(address,address,address,uint256) (paths: 4, time: 0.14s, bounds: [])
[PASS] prove_TransferFrom(address,address,uint256,uint256) (paths: 7, time: 0.16s, bounds: [])
[PASS] prove_TransferFromAllowanceReachesZero(address,address,address,uint256,uint256) (paths: 15, time: 0.20s, bounds: [])
[PASS] prove_TransferFromDecreasesAllowance(address,address,address,uint256) (paths: 4, time: 0.14s, bounds: [])
[PASS] prove_TransferFromDoesNotUpdateOtherBalances(address,address,address,address,uint256) (paths: 18, time: 0.18s, bounds: [])
[PASS] prove_TransferFromNoFees(address,address,address,uint256) (paths: 12, time: 0.28s, bounds: [])
[PASS] prove_TransferFromZeroAmount(address,address,address) (paths: 8, time: 0.09s, bounds: [])
[ERROR] prove_TransferFromZeroAmountToZeroAddressReverts(address,address) (paths: 7, time: 0.06s, bounds: [])
[PASS] prove_TransferZeroAmount(address,address) (paths: 6, time: 0.07s, bounds: [])
[ERROR] prove_TransferZeroAmountToZeroAddressReverts(address) (paths: 3, time: 0.01s, bounds: [])
[PASS] prove_ZeroAddressHasNoToken() (paths: 1, time: 0.01s, bounds: [])
[PASS] proveFail_ApproveFromZeroAddress(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[PASS] proveFail_ApproveToZeroAddress(address,uint256) (paths: 4, time: 0.02s, bounds: [])
[ERROR] proveFail_ApproveZeroAddress(address,uint256) (paths: 3, time: 0.02s, bounds: [])
[ERROR] proveFail_ApproveZeroAddressForMSGSender(address,uint256) (paths: 2, time: 0.01s, bounds: [])
[PASS] proveFail_BurnFromZeroAddress(uint256) (paths: 2, time: 0.01s, bounds: [])
[PASS] proveFail_BurnUnderBalance(address,uint256) (paths: 4, time: 0.04s, bounds: [])
[ERROR] proveFail_BurnUnderSupply(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[ERROR] proveFail_DecreaseAllowanceUnderAllowance(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[ERROR] proveFail_IncreaseAllowanceUnderAllowance(address,uint256) (paths: 3, time: 0.02s, bounds: [])
[PASS] proveFail_MintOverflow(address) (paths: 3, time: 0.03s, bounds: [])
[PASS] proveFail_MintToZeroAddress(uint256) (paths: 2, time: 0.01s, bounds: [])
[ERROR] proveFail_MintUnderSupply(address,uint256) (paths: 3, time: 0.03s, bounds: [])
[ERROR] proveFail_TransferFromNotEnoughAmount(address,address,uint256) (paths: 6, time: 0.05s, bounds: [])
[PASS] proveFail_TransferFromToZeroAddress(address,address,uint256) (paths: 8, time: 0.08s, bounds: [])
[PASS] proveFail_TransferFromUnderBalance(address,address,uint256) (paths: 11, time: 0.18s, bounds: [])
[ERROR] proveFail_TransferFromUnderBalancei(address,address,uint256) (paths: 6, time: 0.05s, bounds: [])
[PASS] proveFail_TransferFromZeroAddress(address,address,uint256) (paths: 6, time: 0.03s, bounds: [])
[PASS] proveFail_TransferFromZeroAddress(address,uint256) (paths: 4, time: 0.02s, bounds: [])
[ERROR] proveFail_TransferFromZeroAddressForMSGSender(address,address,uint256) (paths: 3, time: 0.01s, bounds: [])
[PASS] proveFail_TransferToZeroAddress(address,uint256) (paths: 4, time: 0.04s, bounds: [])
[PASS] proveFail_TransferUnderBalance(address,uint256) (paths: 6, time: 0.09s, bounds: [])
[ERROR] proveFail_TransferUnderBalancej(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[PASS] prove_AllowanceUpdatedAfterBurn(address,address,uint256) (paths: 8, time: 0.07s, bounds: [])
[PASS] prove_Approve(address,uint256) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_ApproveMaxAmount(address,address) (paths: 5, time: 0.04s, bounds: [])
[PASS] prove_ApproveNonZeroAmount(address,address,uint256) (paths: 6, time: 0.04s, bounds: [])
[PASS] prove_ApproveZeroAmount(address,address) (paths: 5, time: 0.04s, bounds: [])
[PASS] prove_BalanceUpdatedAfterBurn(address,address,uint256) (paths: 7, time: 0.09s, bounds: [])
[PASS] prove_BurnDifferentAccount(address,uint256,address,uint256) (paths: 8, time: 0.12s, bounds: [])
[PASS] prove_BurnFromNonZeroAddress(address,uint256) (paths: 4, time: 0.05s, bounds: [])
[PASS] prove_BurnSameAccount(address,uint256) (paths: 3, time: 0.06s, bounds: [])
[PASS] prove_BurnZeroTokens(address) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_ConsecutiveApprovePositiveToPositive(address,address,uint256,uint256) (paths: 5, time: 0.06s, bounds: [])
[PASS] prove_DecreaseAllowance(address,uint256) (paths: 4, time: 0.08s, bounds: [])
[PASS] prove_IncreaseAllowance(address,uint256) (paths: 3, time: 0.07s, bounds: [])
[PASS] prove_Mint(address,uint256) (paths: 3, time: 0.05s, bounds: [])
[PASS] prove_MintZeroTokens(address) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_MsgSenderCanRetrieveOtherBalance(address,uint256) (paths: 5, time: 0.03s, bounds: [])
[PASS] prove_MsgSenderCanRetrieveOwnBalance(uint256) (paths: 1, time: 0.02s, bounds: [])
[PASS] prove_MsgSenderCanTransferTotalBalance(address,address,uint256) (paths: 7, time: 0.09s, bounds: [])
[PASS] prove_MsgSenderCanTransferTotalBalanceZero(address,address) (paths: 6, time: 0.07s, bounds: [])
[PASS] prove_MultipleTransferFromAllowed(address,address,address,uint256,uint256) (paths: 16, time: 0.31s, bounds: [])
[PASS] prove_MultipleTransferFromsOfZeroAmountAllowed(address,address,address,uint8) (paths: 15, time: 0.18s, bounds: [])
[PASS] prove_MultipleTransfersAllowed(address,address,uint256,uint256) (paths: 9, time: 0.13s, bounds: [])
[PASS] prove_MultipleTransfersOfZeroAmountAllowed(address,address,uint8) (paths: 11, time: 0.17s, bounds: [])
[PASS] prove_SelfApproveAndTransferFromOwnAccount(address,address,uint256) (paths: 10, time: 0.17s, bounds: [])
[PASS] prove_SelfApproveAndTransferFromOwnAccountZeroAmountAllowed(address,address) (paths: 6, time: 0.11s, bounds: [])
[PASS] prove_SelfApprovePositiveAmount(address,uint256) (paths: 4, time: 0.04s, bounds: [])
[PASS] prove_SelfApproveZeroAmountAllowed(address) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_SelfTransferPositiveAmountAllowed(address,uint256) (paths: 4, time: 0.06s, bounds: [])
[PASS] prove_SelfTransferZeroAmountAllowed(address) (paths: 3, time: 0.04s, bounds: [])
[PASS] prove_TokenReceiverCanTransferFromTotalBalance(address,address,uint256) (paths: 10, time: 0.17s, bounds: [])
[PASS] prove_TokenReceiverCanTransferFromTotalBalanceZero(address,address,address) (paths: 10, time: 0.11s, bounds: [])
[PASS] prove_Transfer(address,uint256,uint256) (paths: 6, time: 0.10s, bounds: [])
[PASS] prove_TransferDoesNotUpdateOtherBalances(address,address,address,uint256) (paths: 4, time: 0.14s, bounds: [])
[PASS] prove_TransferFrom(address,address,uint256,uint256) (paths: 7, time: 0.16s, bounds: [])
[PASS] prove_TransferFromAllowanceReachesZero(address,address,address,uint256,uint256) (paths: 15, time: 0.20s, bounds: [])
[PASS] prove_TransferFromDecreasesAllowance(address,address,address,uint256) (paths: 4, time: 0.14s, bounds: [])
[PASS] prove_TransferFromDoesNotUpdateOtherBalances(address,address,address,address,uint256) (paths: 18, time: 0.28s, bounds: [])
[PASS] prove_TransferFromNoFees(address,address,address,uint256) (paths: 12, time: 0.18s, bounds: [])
[PASS] prove_TransferFromZeroAmount(address,address,address) (paths: 8, time: 0.08s, bounds: [])
[ERROR] prove_TransferFromZeroAmountToZeroAddressReverts(address,address) (paths: 6, time: 0.05s, bounds: [])
[PASS] prove_TransferZeroAmount(address,address) (paths: 6, time: 0.07s, bounds: [])
[ERROR] prove_TransferZeroAmountToZeroAddressReverts(address) (paths: 3, time: 0.01s, bounds: [])
[PASS] prove_ZeroAddressHasNoToken() (paths: 1, time: 0.01s, bounds: [])
[PASS] proveFail_ApproveFromZeroAddress(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[PASS] proveFail_ApproveToZeroAddress(address,uint256) (paths: 4, time: 0.02s, bounds: [])
[ERROR] proveFail_ApproveZeroAddress(address,uint256) (paths: 3, time: 0.02s, bounds: [])
[ERROR] proveFail_ApproveZeroAddressForMSGSender(address,uint256) (paths: 2, time: 0.01s, bounds: [])
[PASS] proveFail_BurnFromZeroAddress(uint256) (paths: 2, time: 0.01s, bounds: [])
[PASS] proveFail_BurnUnderBalance(address,uint256) (paths: 4, time: 0.04s, bounds: [])
[ERROR] proveFail_BurnUnderSupply(address,uint256) (paths: 4, time: 0.04s, bounds: [])
[ERROR] proveFail_DecreaseAllowanceUnderAllowance(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[ERROR] proveFail_IncreaseAllowanceUnderAllowance(address,uint256) (paths: 3, time: 0.02s, bounds: [])
[PASS] proveFail_MintOverflow(address) (paths: 3, time: 0.03s, bounds: [])
[PASS] proveFail_MintToZeroAddress(uint256) (paths: 2, time: 0.01s, bounds: [])
[ERROR] proveFail_MintUnderSupply(address,uint256) (paths: 3, time: 0.03s, bounds: [])
[ERROR] proveFail_TransferFromNotEnoughAmount(address,address,uint256) (paths: 6, time: 0.05s, bounds: [])
[PASS] proveFail_TransferFromToZeroAddress(address,address,uint256) (paths: 8, time: 0.08s, bounds: [])
[PASS] proveFail_TransferFromUnderBalance(address,address,uint256) (paths: 11, time: 0.18s, bounds: [])
[ERROR] proveFail_TransferFromUnderBalancei(address,address,uint256) (paths: 6, time: 0.05s, bounds: [])
[PASS] proveFail_TransferFromZeroAddress(address,address,uint256) (paths: 6, time: 0.03s, bounds: [])
[PASS] proveFail_TransferFromZeroAddress(address,uint256) (paths: 4, time: 0.02s, bounds: [])
[ERROR] proveFail_TransferFromZeroAddressForMSGSender(address,address,uint256) (paths: 3, time: 0.01s, bounds: [])
[PASS] proveFail_TransferToZeroAddress(address,uint256) (paths: 4, time: 0.04s, bounds: [])
[PASS] proveFail_TransferUnderBalance(address,uint256) (paths: 6, time: 0.09s, bounds: [])
[ERROR] proveFail_TransferUnderBalancej(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[PASS] prove_AllowanceUpdatedAfterBurn(address,address,uint256) (paths: 8, time: 0.07s, bounds: [])
[PASS] prove_Approve(address,uint256) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_ApproveMaxAmount(address,address) (paths: 5, time: 0.04s, bounds: [])
[PASS] prove_ApproveNonZeroAmount(address,address,uint256) (paths: 6, time: 0.04s, bounds: [])
[PASS] prove_ApproveZeroAmount(address,address) (paths: 5, time: 0.04s, bounds: [])
[PASS] prove_BalanceUpdatedAfterBurn(address,address,uint256) (paths: 7, time: 0.10s, bounds: [])
[PASS] prove_BurnDifferentAccount(address,uint256,address,uint256) (paths: 8, time: 0.12s, bounds: [])
[PASS] prove_BurnFromNonZeroAddress(address,uint256) (paths: 4, time: 0.05s, bounds: [])
[PASS] prove_BurnSameAccount(address,uint256) (paths: 3, time: 0.06s, bounds: [])
[PASS] prove_BurnZeroTokens(address) (paths: 3, time: 0.04s, bounds: [])
[PASS] prove_ConsecutiveApprovePositiveToPositive(address,address,uint256,uint256) (paths: 5, time: 0.06s, bounds: [])
[PASS] prove_DecreaseAllowance(address,uint256) (paths: 4, time: 0.08s, bounds: [])
[PASS] prove_IncreaseAllowance(address,uint256) (paths: 3, time: 0.08s, bounds: [])
[PASS] prove_Mint(address,uint256) (paths: 3, time: 0.05s, bounds: [])
[PASS] prove_MintZeroTokens(address) (paths: 3, time: 0.04s, bounds: [])
[PASS] prove_MsgSenderCanRetrieveOtherBalance(address,uint256) (paths: 5, time: 0.04s, bounds: [])
[PASS] prove_MsgSenderCanRetrieveOwnBalance(uint256) (paths: 1, time: 0.02s, bounds: [])
[PASS] prove_MsgSenderCanTransferTotalBalance(address,address,uint256) (paths: 7, time: 0.09s, bounds: [])
[PASS] prove_MsgSenderCanTransferTotalBalanceZero(address,address) (paths: 6, time: 0.08s, bounds: [])
[PASS] prove_MultipleTransferFromAllowed(address,address,address,uint256,uint256) (paths: 16, time: 0.35s, bounds: [])
[PASS] prove_MultipleTransferFromsOfZeroAmountAllowed(address,address,address,uint8) (paths: 15, time: 0.21s, bounds: [])
[PASS] prove_MultipleTransfersAllowed(address,address,uint256,uint256) (paths: 9, time: 0.15s, bounds: [])
[PASS] prove_MultipleTransfersOfZeroAmountAllowed(address,address,uint8) (paths: 11, time: 0.18s, bounds: [])
[PASS] prove_SelfApproveAndTransferFromOwnAccount(address,address,uint256) (paths: 10, time: 0.18s, bounds: [])
[PASS] prove_SelfApproveAndTransferFromOwnAccountZeroAmountAllowed(address,address) (paths: 6, time: 0.10s, bounds: [])
[PASS] prove_SelfApprovePositiveAmount(address,uint256) (paths: 4, time: 0.04s, bounds: [])
[PASS] prove_SelfApproveZeroAmountAllowed(address) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_SelfTransferPositiveAmountAllowed(address,uint256) (paths: 4, time: 0.06s, bounds: [])
[PASS] prove_SelfTransferZeroAmountAllowed(address) (paths: 3, time: 0.04s, bounds: [])
[PASS] prove_TokenReceiverCanTransferFromTotalBalance(address,address,uint256) (paths: 10, time: 0.20s, bounds: [])
[PASS] prove_TokenReceiverCanTransferFromTotalBalanceZero(address,address,address) (paths: 10, time: 0.12s, bounds: [])
[PASS] prove_Transfer(address,uint256,uint256) (paths: 7, time: 0.12s, bounds: [])
[PASS] prove_TransferDoesNotUpdateOtherBalances(address,address,address,uint256) (paths: 4, time: 0.16s, bounds: [])
[PASS] prove_TransferFrom(address,address,uint256,uint256) (paths: 7, time: 0.18s, bounds: [])
[PASS] prove_TransferFromAllowanceReachesZero(address,address,address,uint256,uint256) (paths: 15, time: 0.21s, bounds: [])
[PASS] prove_TransferFromDecreasesAllowance(address,address,address,uint256) (paths: 4, time: 0.15s, bounds: [])
[PASS] prove_TransferFromDoesNotUpdateOtherBalances(address,address,address,address,uint256) (paths: 18, time: 0.18s, bounds: [])
[PASS] prove_TransferFromNoFees(address,address,address,uint256) (paths: 12, time: 0.29s, bounds: [])
[PASS] prove_TransferFromZeroAmount(address,address,address) (paths: 8, time: 0.09s, bounds: [])
[ERROR] prove_TransferFromZeroAmountToZeroAddressReverts(address,address) (paths: 6, time: 0.06s, bounds: [])
[PASS] prove_TransferZeroAmount(address,address) (paths: 6, time: 0.08s, bounds: [])
[ERROR] prove_TransferZeroAmountToZeroAddressReverts(address) (paths: 3, time: 0.01s, bounds: [])
[PASS] prove_ZeroAddressHasNoToken() (paths: 1, time: 0.01s, bounds: [])
[PASS] proveFail_ApproveFromZeroAddress(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[PASS] proveFail_ApproveToZeroAddress(address,uint256) (paths: 4, time: 0.02s, bounds: [])
[ERROR] proveFail_ApproveZeroAddress(address,uint256) (paths: 3, time: 0.02s, bounds: [])
[ERROR] proveFail_ApproveZeroAddressForMSGSender(address,uint256) (paths: 2, time: 0.01s, bounds: [])
[PASS] proveFail_BurnFromZeroAddress(uint256) (paths: 2, time: 0.01s, bounds: [])
[PASS] proveFail_BurnUnderBalance(address,uint256) (paths: 4, time: 0.04s, bounds: [])
[ERROR] proveFail_BurnUnderSupply(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[ERROR] proveFail_DecreaseAllowanceUnderAllowance(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[ERROR] proveFail_IncreaseAllowanceUnderAllowance(address,uint256) (paths: 3, time: 0.02s, bounds: [])
[PASS] proveFail_MintOverflow(address) (paths: 3, time: 0.03s, bounds: [])
[PASS] proveFail_MintToZeroAddress(uint256) (paths: 2, time: 0.01s, bounds: [])
[ERROR] proveFail_MintUnderSupply(address,uint256) (paths: 3, time: 0.02s, bounds: [])
[ERROR] proveFail_TransferFromNotEnoughAmount(address,address,uint256) (paths: 6, time: 0.05s, bounds: [])
[PASS] proveFail_TransferFromToZeroAddress(address,address,uint256) (paths: 8, time: 0.08s, bounds: [])
[PASS] proveFail_TransferFromUnderBalance(address,address,uint256) (paths: 11, time: 0.18s, bounds: [])
[ERROR] proveFail_TransferFromUnderBalancei(address,address,uint256) (paths: 6, time: 0.05s, bounds: [])
[PASS] proveFail_TransferFromZeroAddress(address,address,uint256) (paths: 6, time: 0.03s, bounds: [])
[PASS] proveFail_TransferFromZeroAddress(address,uint256) (paths: 4, time: 0.02s, bounds: [])
[ERROR] proveFail_TransferFromZeroAddressForMSGSender(address,address,uint256) (paths: 3, time: 0.01s, bounds: [])
[PASS] proveFail_TransferToZeroAddress(address,uint256) (paths: 4, time: 0.04s, bounds: [])
[PASS] proveFail_TransferUnderBalance(address,uint256) (paths: 6, time: 0.08s, bounds: [])
[ERROR] proveFail_TransferUnderBalancej(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[PASS] prove_AllowanceUpdatedAfterBurn(address,address,uint256) (paths: 8, time: 0.07s, bounds: [])
[PASS] prove_Approve(address,uint256) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_ApproveMaxAmount(address,address) (paths: 5, time: 0.04s, bounds: [])
[PASS] prove_ApproveNonZeroAmount(address,address,uint256) (paths: 6, time: 0.05s, bounds: [])
[PASS] prove_ApproveZeroAmount(address,address) (paths: 5, time: 0.04s, bounds: [])
[PASS] prove_BalanceUpdatedAfterBurn(address,address,uint256) (paths: 7, time: 0.10s, bounds: [])
[PASS] prove_BurnDifferentAccount(address,uint256,address,uint256) (paths: 8, time: 0.12s, bounds: [])
[PASS] prove_BurnFromNonZeroAddress(address,uint256) (paths: 4, time: 0.05s, bounds: [])
[PASS] prove_BurnSameAccount(address,uint256) (paths: 3, time: 0.06s, bounds: [])
[PASS] prove_BurnZeroTokens(address) (paths: 3, time: 0.04s, bounds: [])
[PASS] prove_ConsecutiveApprovePositiveToPositive(address,address,uint256,uint256) (paths: 5, time: 0.06s, bounds: [])
[PASS] prove_DecreaseAllowance(address,uint256) (paths: 4, time: 0.08s, bounds: [])
[PASS] prove_IncreaseAllowance(address,uint256) (paths: 3, time: 0.07s, bounds: [])
[PASS] prove_Mint(address,uint256) (paths: 3, time: 0.05s, bounds: [])
[PASS] prove_MintZeroTokens(address) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_MsgSenderCanRetrieveOtherBalance(address,uint256) (paths: 5, time: 0.03s, bounds: [])
[PASS] prove_MsgSenderCanRetrieveOwnBalance(uint256) (paths: 1, time: 0.02s, bounds: [])
[PASS] prove_MsgSenderCanTransferTotalBalance(address,address,uint256) (paths: 7, time: 0.09s, bounds: [])
[PASS] prove_MsgSenderCanTransferTotalBalanceZero(address,address) (paths: 6, time: 0.07s, bounds: [])
[PASS] prove_MultipleTransferFromAllowed(address,address,address,uint256,uint256) (paths: 16, time: 0.31s, bounds: [])
[PASS] prove_MultipleTransferFromsOfZeroAmountAllowed(address,address,address,uint8) (paths: 15, time: 0.19s, bounds: [])
[PASS] prove_MultipleTransfersAllowed(address,address,uint256,uint256) (paths: 9, time: 0.13s, bounds: [])
[PASS] prove_MultipleTransfersOfZeroAmountAllowed(address,address,uint8) (paths: 11, time: 0.17s, bounds: [])
[PASS] prove_SelfApproveAndTransferFromOwnAccount(address,address,uint256) (paths: 10, time: 0.17s, bounds: [])
[PASS] prove_SelfApproveAndTransferFromOwnAccountZeroAmountAllowed(address,address) (paths: 7, time: 0.13s, bounds: [])
[PASS] prove_SelfApprovePositiveAmount(address,uint256) (paths: 4, time: 0.04s, bounds: [])
[PASS] prove_SelfApproveZeroAmountAllowed(address) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_SelfTransferPositiveAmountAllowed(address,uint256) (paths: 4, time: 0.06s, bounds: [])
[PASS] prove_SelfTransferZeroAmountAllowed(address) (paths: 3, time: 0.04s, bounds: [])
[PASS] prove_TokenReceiverCanTransferFromTotalBalance(address,address,uint256) (paths: 10, time: 0.17s, bounds: [])
[PASS] prove_TokenReceiverCanTransferFromTotalBalanceZero(address,address,address) (paths: 10, time: 0.12s, bounds: [])
[PASS] prove_Transfer(address,uint256,uint256) (paths: 6, time: 0.10s, bounds: [])
[PASS] prove_TransferDoesNotUpdateOtherBalances(address,address,address,uint256) (paths: 4, time: 0.14s, bounds: [])
[PASS] prove_TransferFrom(address,address,uint256,uint256) (paths: 7, time: 0.16s, bounds: [])
[PASS] prove_TransferFromAllowanceReachesZero(address,address,address,uint256,uint256) (paths: 15, time: 0.20s, bounds: [])
[PASS] prove_TransferFromDecreasesAllowance(address,address,address,uint256) (paths: 4, time: 0.14s, bounds: [])
[PASS] prove_TransferFromDoesNotUpdateOtherBalances(address,address,address,address,uint256) (paths: 18, time: 0.17s, bounds: [])
[PASS] prove_TransferFromNoFees(address,address,address,uint256) (paths: 11, time: 0.17s, bounds: [])
[PASS] prove_TransferFromZeroAmount(address,address,address) (paths: 8, time: 0.19s, bounds: [])
[ERROR] prove_TransferFromZeroAmountToZeroAddressReverts(address,address) (paths: 6, time: 0.05s, bounds: [])
[PASS] prove_TransferZeroAmount(address,address) (paths: 6, time: 0.07s, bounds: [])
[ERROR] prove_TransferZeroAmountToZeroAddressReverts(address) (paths: 3, time: 0.01s, bounds: [])
[PASS] prove_ZeroAddressHasNoToken() (paths: 1, time: 0.01s, bounds: [])
[PASS] proveFail_ApproveFromZeroAddress(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[PASS] proveFail_ApproveToZeroAddress(address,uint256) (paths: 4, time: 0.02s, bounds: [])
[ERROR] proveFail_ApproveZeroAddress(address,uint256) (paths: 3, time: 0.02s, bounds: [])
[ERROR] proveFail_ApproveZeroAddressForMSGSender(address,uint256) (paths: 2, time: 0.01s, bounds: [])
[PASS] proveFail_BurnFromZeroAddress(uint256) (paths: 2, time: 0.02s, bounds: [])
[PASS] proveFail_BurnUnderBalance(address,uint256) (paths: 4, time: 0.04s, bounds: [])
[ERROR] proveFail_BurnUnderSupply(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[ERROR] proveFail_DecreaseAllowanceUnderAllowance(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[ERROR] proveFail_IncreaseAllowanceUnderAllowance(address,uint256) (paths: 3, time: 0.02s, bounds: [])
[PASS] proveFail_MintOverflow(address) (paths: 3, time: 0.03s, bounds: [])
[PASS] proveFail_MintToZeroAddress(uint256) (paths: 2, time: 0.01s, bounds: [])
[ERROR] proveFail_MintUnderSupply(address,uint256) (paths: 3, time: 0.02s, bounds: [])
[ERROR] proveFail_TransferFromNotEnoughAmount(address,address,uint256) (paths: 6, time: 0.04s, bounds: [])
[PASS] proveFail_TransferFromToZeroAddress(address,address,uint256) (paths: 8, time: 0.08s, bounds: [])
[PASS] proveFail_TransferFromUnderBalance(address,address,uint256) (paths: 11, time: 0.18s, bounds: [])
[ERROR] proveFail_TransferFromUnderBalancei(address,address,uint256) (paths: 6, time: 0.05s, bounds: [])
[PASS] proveFail_TransferFromZeroAddress(address,address,uint256) (paths: 6, time: 0.03s, bounds: [])
[PASS] proveFail_TransferFromZeroAddress(address,uint256) (paths: 4, time: 0.02s, bounds: [])
[ERROR] proveFail_TransferFromZeroAddressForMSGSender(address,address,uint256) (paths: 3, time: 0.01s, bounds: [])
[PASS] proveFail_TransferToZeroAddress(address,uint256) (paths: 4, time: 0.04s, bounds: [])
[PASS] proveFail_TransferUnderBalance(address,uint256) (paths: 6, time: 0.09s, bounds: [])
[ERROR] proveFail_TransferUnderBalancej(address,uint256) (paths: 4, time: 0.04s, bounds: [])
[PASS] prove_AllowanceUpdatedAfterBurn(address,address,uint256) (paths: 8, time: 0.08s, bounds: [])
[PASS] prove_Approve(address,uint256) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_ApproveMaxAmount(address,address) (paths: 5, time: 0.04s, bounds: [])
[PASS] prove_ApproveNonZeroAmount(address,address,uint256) (paths: 6, time: 0.04s, bounds: [])
[PASS] prove_ApproveZeroAmount(address,address) (paths: 5, time: 0.04s, bounds: [])
[PASS] prove_BalanceUpdatedAfterBurn(address,address,uint256) (paths: 7, time: 0.10s, bounds: [])
[PASS] prove_BurnDifferentAccount(address,uint256,address,uint256) (paths: 8, time: 0.12s, bounds: [])
[PASS] prove_BurnFromNonZeroAddress(address,uint256) (paths: 4, time: 0.05s, bounds: [])
[PASS] prove_BurnSameAccount(address,uint256) (paths: 3, time: 0.07s, bounds: [])
[PASS] prove_BurnZeroTokens(address) (paths: 3, time: 0.04s, bounds: [])
[PASS] prove_ConsecutiveApprovePositiveToPositive(address,address,uint256,uint256) (paths: 5, time: 0.06s, bounds: [])
[PASS] prove_DecreaseAllowance(address,uint256) (paths: 4, time: 0.09s, bounds: [])
[PASS] prove_IncreaseAllowance(address,uint256) (paths: 3, time: 0.08s, bounds: [])
[PASS] prove_Mint(address,uint256) (paths: 3, time: 0.05s, bounds: [])
[PASS] prove_MintZeroTokens(address) (paths: 3, time: 0.04s, bounds: [])
[PASS] prove_MsgSenderCanRetrieveOtherBalance(address,uint256) (paths: 5, time: 0.03s, bounds: [])
[PASS] prove_MsgSenderCanRetrieveOwnBalance(uint256) (paths: 1, time: 0.02s, bounds: [])
[PASS] prove_MsgSenderCanTransferTotalBalance(address,address,uint256) (paths: 7, time: 0.09s, bounds: [])
[PASS] prove_MsgSenderCanTransferTotalBalanceZero(address,address) (paths: 6, time: 0.07s, bounds: [])
[PASS] prove_MultipleTransferFromAllowed(address,address,address,uint256,uint256) (paths: 16, time: 0.31s, bounds: [])
[PASS] prove_MultipleTransferFromsOfZeroAmountAllowed(address,address,address,uint8) (paths: 15, time: 0.19s, bounds: [])
[PASS] prove_MultipleTransfersAllowed(address,address,uint256,uint256) (paths: 9, time: 0.13s, bounds: [])
[PASS] prove_MultipleTransfersOfZeroAmountAllowed(address,address,uint8) (paths: 11, time: 0.17s, bounds: [])
[PASS] prove_SelfApproveAndTransferFromOwnAccount(address,address,uint256) (paths: 10, time: 0.17s, bounds: [])
[PASS] prove_SelfApproveAndTransferFromOwnAccountZeroAmountAllowed(address,address) (paths: 6, time: 0.09s, bounds: [])
[PASS] prove_SelfApprovePositiveAmount(address,uint256) (paths: 4, time: 0.04s, bounds: [])
[PASS] prove_SelfApproveZeroAmountAllowed(address) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_SelfTransferPositiveAmountAllowed(address,uint256) (paths: 4, time: 0.06s, bounds: [])
[PASS] prove_SelfTransferZeroAmountAllowed(address) (paths: 3, time: 0.04s, bounds: [])
[PASS] prove_TokenReceiverCanTransferFromTotalBalance(address,address,uint256) (paths: 10, time: 0.17s, bounds: [])
[PASS] prove_TokenReceiverCanTransferFromTotalBalanceZero(address,address,address) (paths: 11, time: 0.14s, bounds: [])
[PASS] prove_Transfer(address,uint256,uint256) (paths: 6, time: 0.10s, bounds: [])
[PASS] prove_TransferDoesNotUpdateOtherBalances(address,address,address,uint256) (paths: 4, time: 0.14s, bounds: [])
[PASS] prove_TransferFrom(address,address,uint256,uint256) (paths: 7, time: 0.16s, bounds: [])
[PASS] prove_TransferFromAllowanceReachesZero(address,address,address,uint256,uint256) (paths: 15, time: 0.20s, bounds: [])
[PASS] prove_TransferFromDecreasesAllowance(address,address,address,uint256) (paths: 4, time: 0.15s, bounds: [])
[PASS] prove_TransferFromDoesNotUpdateOtherBalances(address,address,address,address,uint256) (paths: 18, time: 0.28s, bounds: [])
[PASS] prove_TransferFromNoFees(address,address,address,uint256) (paths: 12, time: 0.18s, bounds: [])
[PASS] prove_TransferFromZeroAmount(address,address,address) (paths: 8, time: 0.09s, bounds: [])
[ERROR] prove_TransferFromZeroAmountToZeroAddressReverts(address,address) (paths: 7, time: 0.06s, bounds: [])
[PASS] prove_TransferZeroAmount(address,address) (paths: 6, time: 0.07s, bounds: [])
[ERROR] prove_TransferZeroAmountToZeroAddressReverts(address) (paths: 3, time: 0.01s, bounds: [])
[PASS] prove_ZeroAddressHasNoToken() (paths: 1, time: 0.01s, bounds: [])
[PASS] proveFail_ApproveFromZeroAddress(address,uint256) (paths: 4, time: 0.02s, bounds: [])
[PASS] proveFail_ApproveToZeroAddress(address,uint256) (paths: 4, time: 0.02s, bounds: [])
[ERROR] proveFail_ApproveZeroAddress(address,uint256) (paths: 3, time: 0.02s, bounds: [])
[ERROR] proveFail_ApproveZeroAddressForMSGSender(address,uint256) (paths: 2, time: 0.01s, bounds: [])
[PASS] proveFail_BurnFromZeroAddress(uint256) (paths: 2, time: 0.01s, bounds: [])
[PASS] proveFail_BurnUnderBalance(address,uint256) (paths: 4, time: 0.04s, bounds: [])
[ERROR] proveFail_BurnUnderSupply(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[ERROR] proveFail_DecreaseAllowanceUnderAllowance(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[ERROR] proveFail_IncreaseAllowanceUnderAllowance(address,uint256) (paths: 3, time: 0.02s, bounds: [])
[PASS] proveFail_MintOverflow(address) (paths: 3, time: 0.03s, bounds: [])
[PASS] proveFail_MintToZeroAddress(uint256) (paths: 2, time: 0.01s, bounds: [])
[ERROR] proveFail_MintUnderSupply(address,uint256) (paths: 3, time: 0.03s, bounds: [])
[ERROR] proveFail_TransferFromNotEnoughAmount(address,address,uint256) (paths: 6, time: 0.04s, bounds: [])
[PASS] proveFail_TransferFromToZeroAddress(address,address,uint256) (paths: 8, time: 0.08s, bounds: [])
[PASS] proveFail_TransferFromUnderBalance(address,address,uint256) (paths: 11, time: 0.18s, bounds: [])
[ERROR] proveFail_TransferFromUnderBalancei(address,address,uint256) (paths: 6, time: 0.05s, bounds: [])
[PASS] proveFail_TransferFromZeroAddress(address,address,uint256) (paths: 6, time: 0.03s, bounds: [])
[PASS] proveFail_TransferFromZeroAddress(address,uint256) (paths: 4, time: 0.02s, bounds: [])
[ERROR] proveFail_TransferFromZeroAddressForMSGSender(address,address,uint256) (paths: 3, time: 0.01s, bounds: [])
[PASS] proveFail_TransferToZeroAddress(address,uint256) (paths: 4, time: 0.04s, bounds: [])
[PASS] proveFail_TransferUnderBalance(address,uint256) (paths: 6, time: 0.08s, bounds: [])
[ERROR] proveFail_TransferUnderBalancej(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[PASS] prove_AllowanceUpdatedAfterBurn(address,address,uint256) (paths: 8, time: 0.07s, bounds: [])
[PASS] prove_Approve(address,uint256) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_ApproveMaxAmount(address,address) (paths: 5, time: 0.04s, bounds: [])
[PASS] prove_ApproveNonZeroAmount(address,address,uint256) (paths: 6, time: 0.04s, bounds: [])
[PASS] prove_ApproveZeroAmount(address,address) (paths: 5, time: 0.04s, bounds: [])
[PASS] prove_BalanceUpdatedAfterBurn(address,address,uint256) (paths: 7, time: 0.09s, bounds: [])
[PASS] prove_BurnDifferentAccount(address,uint256,address,uint256) (paths: 8, time: 0.12s, bounds: [])
[PASS] prove_BurnFromNonZeroAddress(address,uint256) (paths: 4, time: 0.05s, bounds: [])
[PASS] prove_BurnSameAccount(address,uint256) (paths: 3, time: 0.06s, bounds: [])
[PASS] prove_BurnZeroTokens(address) (paths: 3, time: 0.04s, bounds: [])
[PASS] prove_ConsecutiveApprovePositiveToPositive(address,address,uint256,uint256) (paths: 5, time: 0.06s, bounds: [])
[PASS] prove_DecreaseAllowance(address,uint256) (paths: 4, time: 0.08s, bounds: [])
[PASS] prove_IncreaseAllowance(address,uint256) (paths: 3, time: 0.07s, bounds: [])
[PASS] prove_Mint(address,uint256) (paths: 3, time: 0.05s, bounds: [])
[PASS] prove_MintZeroTokens(address) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_MsgSenderCanRetrieveOtherBalance(address,uint256) (paths: 5, time: 0.03s, bounds: [])
[PASS] prove_MsgSenderCanRetrieveOwnBalance(uint256) (paths: 1, time: 0.02s, bounds: [])
[PASS] prove_MsgSenderCanTransferTotalBalance(address,address,uint256) (paths: 7, time: 0.09s, bounds: [])
[PASS] prove_MsgSenderCanTransferTotalBalanceZero(address,address) (paths: 6, time: 0.07s, bounds: [])
[PASS] prove_MultipleTransferFromAllowed(address,address,address,uint256,uint256) (paths: 16, time: 0.33s, bounds: [])
[PASS] prove_MultipleTransferFromsOfZeroAmountAllowed(address,address,address,uint8) (paths: 15, time: 0.20s, bounds: [])
[PASS] prove_MultipleTransfersAllowed(address,address,uint256,uint256) (paths: 10, time: 0.14s, bounds: [])
[PASS] prove_MultipleTransfersOfZeroAmountAllowed(address,address,uint8) (paths: 11, time: 0.17s, bounds: [])
[PASS] prove_SelfApproveAndTransferFromOwnAccount(address,address,uint256) (paths: 10, time: 0.18s, bounds: [])
[PASS] prove_SelfApproveAndTransferFromOwnAccountZeroAmountAllowed(address,address) (paths: 6, time: 0.09s, bounds: [])
[PASS] prove_SelfApprovePositiveAmount(address,uint256) (paths: 4, time: 0.04s, bounds: [])
[PASS] prove_SelfApproveZeroAmountAllowed(address) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_SelfTransferPositiveAmountAllowed(address,uint256) (paths: 4, time: 0.06s, bounds: [])
[PASS] prove_SelfTransferZeroAmountAllowed(address) (paths: 3, time: 0.04s, bounds: [])
[PASS] prove_TokenReceiverCanTransferFromTotalBalance(address,address,uint256) (paths: 10, time: 0.18s, bounds: [])
[PASS] prove_TokenReceiverCanTransferFromTotalBalanceZero(address,address,address) (paths: 10, time: 0.12s, bounds: [])
[PASS] prove_Transfer(address,uint256,uint256) (paths: 6, time: 0.11s, bounds: [])
[PASS] prove_TransferDoesNotUpdateOtherBalances(address,address,address,uint256) (paths: 5, time: 0.17s, bounds: [])
[PASS] prove_TransferFrom(address,address,uint256,uint256) (paths: 7, time: 0.18s, bounds: [])
[PASS] prove_TransferFromAllowanceReachesZero(address,address,address,uint256,uint256) (paths: 15, time: 0.23s, bounds: [])
[PASS] prove_TransferFromDecreasesAllowance(address,address,address,uint256) (paths: 4, time: 0.15s, bounds: [])
[PASS] prove_TransferFromDoesNotUpdateOtherBalances(address,address,address,address,uint256) (paths: 18, time: 0.31s, bounds: [])
[PASS] prove_TransferFromNoFees(address,address,address,uint256) (paths: 12, time: 0.19s, bounds: [])
[PASS] prove_TransferFromZeroAmount(address,address,address) (paths: 8, time: 0.10s, bounds: [])
[ERROR] prove_TransferFromZeroAmountToZeroAddressReverts(address,address) (paths: 6, time: 0.06s, bounds: [])
[PASS] prove_TransferZeroAmount(address,address) (paths: 6, time: 0.07s, bounds: [])
[ERROR] prove_TransferZeroAmountToZeroAddressReverts(address) (paths: 3, time: 0.01s, bounds: [])
[PASS] prove_ZeroAddressHasNoToken() (paths: 1, time: 0.01s, bounds: [])
[PASS] proveFail_ApproveFromZeroAddress(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[PASS] proveFail_ApproveToZeroAddress(address,uint256) (paths: 4, time: 0.02s, bounds: [])
[ERROR] proveFail_ApproveZeroAddress(address,uint256) (paths: 3, time: 0.02s, bounds: [])
[ERROR] proveFail_ApproveZeroAddressForMSGSender(address,uint256) (paths: 2, time: 0.01s, bounds: [])
[PASS] proveFail_BurnFromZeroAddress(uint256) (paths: 2, time: 0.01s, bounds: [])
[PASS] proveFail_BurnUnderBalance(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[ERROR] proveFail_BurnUnderSupply(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[ERROR] proveFail_DecreaseAllowanceUnderAllowance(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[ERROR] proveFail_IncreaseAllowanceUnderAllowance(address,uint256) (paths: 3, time: 0.02s, bounds: [])
[PASS] proveFail_MintOverflow(address) (paths: 3, time: 0.03s, bounds: [])
[PASS] proveFail_MintToZeroAddress(uint256) (paths: 2, time: 0.01s, bounds: [])
[ERROR] proveFail_MintUnderSupply(address,uint256) (paths: 3, time: 0.02s, bounds: [])
[ERROR] proveFail_TransferFromNotEnoughAmount(address,address,uint256) (paths: 6, time: 0.05s, bounds: [])
[PASS] proveFail_TransferFromToZeroAddress(address,address,uint256) (paths: 8, time: 0.08s, bounds: [])
[PASS] proveFail_TransferFromUnderBalance(address,address,uint256) (paths: 11, time: 0.18s, bounds: [])
[ERROR] proveFail_TransferFromUnderBalancei(address,address,uint256) (paths: 6, time: 0.05s, bounds: [])
[PASS] proveFail_TransferFromZeroAddress(address,address,uint256) (paths: 6, time: 0.03s, bounds: [])
[PASS] proveFail_TransferFromZeroAddress(address,uint256) (paths: 4, time: 0.02s, bounds: [])
[ERROR] proveFail_TransferFromZeroAddressForMSGSender(address,address,uint256) (paths: 3, time: 0.01s, bounds: [])
[PASS] proveFail_TransferToZeroAddress(address,uint256) (paths: 4, time: 0.04s, bounds: [])
[PASS] proveFail_TransferUnderBalance(address,uint256) (paths: 6, time: 0.09s, bounds: [])
[ERROR] proveFail_TransferUnderBalancej(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[PASS] prove_AllowanceUpdatedAfterBurn(address,address,uint256) (paths: 8, time: 0.07s, bounds: [])
[PASS] prove_Approve(address,uint256) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_ApproveMaxAmount(address,address) (paths: 5, time: 0.04s, bounds: [])
[PASS] prove_ApproveNonZeroAmount(address,address,uint256) (paths: 6, time: 0.04s, bounds: [])
[PASS] prove_ApproveZeroAmount(address,address) (paths: 5, time: 0.04s, bounds: [])
[PASS] prove_BalanceUpdatedAfterBurn(address,address,uint256) (paths: 7, time: 0.10s, bounds: [])
[PASS] prove_BurnDifferentAccount(address,uint256,address,uint256) (paths: 8, time: 0.13s, bounds: [])
[PASS] prove_BurnFromNonZeroAddress(address,uint256) (paths: 4, time: 0.06s, bounds: [])
[PASS] prove_BurnSameAccount(address,uint256) (paths: 3, time: 0.06s, bounds: [])
[PASS] prove_BurnZeroTokens(address) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_ConsecutiveApprovePositiveToPositive(address,address,uint256,uint256) (paths: 5, time: 0.06s, bounds: [])
[PASS] prove_DecreaseAllowance(address,uint256) (paths: 4, time: 0.08s, bounds: [])
[PASS] prove_IncreaseAllowance(address,uint256) (paths: 3, time: 0.07s, bounds: [])
[PASS] prove_Mint(address,uint256) (paths: 3, time: 0.05s, bounds: [])
[PASS] prove_MintZeroTokens(address) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_MsgSenderCanRetrieveOtherBalance(address,uint256) (paths: 5, time: 0.03s, bounds: [])
[PASS] prove_MsgSenderCanRetrieveOwnBalance(uint256) (paths: 1, time: 0.02s, bounds: [])
[PASS] prove_MsgSenderCanTransferTotalBalance(address,address,uint256) (paths: 7, time: 0.09s, bounds: [])
[PASS] prove_MsgSenderCanTransferTotalBalanceZero(address,address) (paths: 6, time: 0.07s, bounds: [])
[PASS] prove_MultipleTransferFromAllowed(address,address,address,uint256,uint256) (paths: 16, time: 0.30s, bounds: [])
[PASS] prove_MultipleTransferFromsOfZeroAmountAllowed(address,address,address,uint8) (paths: 15, time: 0.18s, bounds: [])
[PASS] prove_MultipleTransfersAllowed(address,address,uint256,uint256) (paths: 9, time: 0.12s, bounds: [])
[PASS] prove_MultipleTransfersOfZeroAmountAllowed(address,address,uint8) (paths: 11, time: 0.16s, bounds: [])
[PASS] prove_SelfApproveAndTransferFromOwnAccount(address,address,uint256) (paths: 10, time: 0.17s, bounds: [])
[PASS] prove_SelfApproveAndTransferFromOwnAccountZeroAmountAllowed(address,address) (paths: 6, time: 0.09s, bounds: [])
[PASS] prove_SelfApprovePositiveAmount(address,uint256) (paths: 4, time: 0.04s, bounds: [])
[PASS] prove_SelfApproveZeroAmountAllowed(address) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_SelfTransferPositiveAmountAllowed(address,uint256) (paths: 4, time: 0.06s, bounds: [])
[PASS] prove_SelfTransferZeroAmountAllowed(address) (paths: 3, time: 0.04s, bounds: [])
[PASS] prove_TokenReceiverCanTransferFromTotalBalance(address,address,uint256) (paths: 8, time: 0.16s, bounds: [])
[PASS] prove_TokenReceiverCanTransferFromTotalBalanceZero(address,address,address) (paths: 10, time: 0.11s, bounds: [])
[PASS] prove_Transfer(address,uint256,uint256) (paths: 6, time: 0.10s, bounds: [])
[PASS] prove_TransferDoesNotUpdateOtherBalances(address,address,address,uint256) (paths: 4, time: 0.13s, bounds: [])
[PASS] prove_TransferFrom(address,address,uint256,uint256) (paths: 7, time: 0.16s, bounds: [])
[PASS] prove_TransferFromAllowanceReachesZero(address,address,address,uint256,uint256) (paths: 15, time: 0.20s, bounds: [])
[PASS] prove_TransferFromDecreasesAllowance(address,address,address,uint256) (paths: 4, time: 0.25s, bounds: [])
[PASS] prove_TransferFromDoesNotUpdateOtherBalances(address,address,address,address,uint256) (paths: 18, time: 0.17s, bounds: [])
[PASS] prove_TransferFromNoFees(address,address,address,uint256) (paths: 11, time: 0.17s, bounds: [])
[PASS] prove_TransferFromZeroAmount(address,address,address) (paths: 8, time: 0.08s, bounds: [])
[ERROR] prove_TransferFromZeroAmountToZeroAddressReverts(address,address) (paths: 6, time: 0.05s, bounds: [])
[PASS] prove_TransferZeroAmount(address,address) (paths: 6, time: 0.07s, bounds: [])
[ERROR] prove_TransferZeroAmountToZeroAddressReverts(address) (paths: 3, time: 0.01s, bounds: [])
[PASS] prove_ZeroAddressHasNoToken() (paths: 1, time: 0.01s, bounds: [])
[PASS] proveFail_ApproveFromZeroAddress(address,uint256) (paths: 4, time: 0.02s, bounds: [])
[PASS] proveFail_ApproveToZeroAddress(address,uint256) (paths: 4, time: 0.02s, bounds: [])
[ERROR] proveFail_ApproveZeroAddress(address,uint256) (paths: 3, time: 0.02s, bounds: [])
[ERROR] proveFail_ApproveZeroAddressForMSGSender(address,uint256) (paths: 2, time: 0.01s, bounds: [])
[PASS] proveFail_BurnFromZeroAddress(uint256) (paths: 2, time: 0.01s, bounds: [])
[PASS] proveFail_BurnUnderBalance(address,uint256) (paths: 4, time: 0.04s, bounds: [])
[ERROR] proveFail_BurnUnderSupply(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[ERROR] proveFail_DecreaseAllowanceUnderAllowance(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[ERROR] proveFail_IncreaseAllowanceUnderAllowance(address,uint256) (paths: 3, time: 0.02s, bounds: [])
[PASS] proveFail_MintOverflow(address) (paths: 3, time: 0.03s, bounds: [])
[PASS] proveFail_MintToZeroAddress(uint256) (paths: 2, time: 0.01s, bounds: [])
[ERROR] proveFail_MintUnderSupply(address,uint256) (paths: 3, time: 0.02s, bounds: [])
[ERROR] proveFail_TransferFromNotEnoughAmount(address,address,uint256) (paths: 6, time: 0.05s, bounds: [])
[PASS] proveFail_TransferFromToZeroAddress(address,address,uint256) (paths: 8, time: 0.09s, bounds: [])
[PASS] proveFail_TransferFromUnderBalance(address,address,uint256) (paths: 11, time: 0.19s, bounds: [])
[ERROR] proveFail_TransferFromUnderBalancei(address,address,uint256) (paths: 6, time: 0.06s, bounds: [])
[PASS] proveFail_TransferFromZeroAddress(address,address,uint256) (paths: 6, time: 0.03s, bounds: [])
[PASS] proveFail_TransferFromZeroAddress(address,uint256) (paths: 4, time: 0.02s, bounds: [])
[ERROR] proveFail_TransferFromZeroAddressForMSGSender(address,address,uint256) (paths: 3, time: 0.01s, bounds: [])
[PASS] proveFail_TransferToZeroAddress(address,uint256) (paths: 4, time: 0.04s, bounds: [])
[PASS] proveFail_TransferUnderBalance(address,uint256) (paths: 6, time: 0.09s, bounds: [])
[ERROR] proveFail_TransferUnderBalancej(address,uint256) (paths: 4, time: 0.03s, bounds: [])
[PASS] prove_AllowanceUpdatedAfterBurn(address,address,uint256) (paths: 8, time: 0.08s, bounds: [])
[PASS] prove_Approve(address,uint256) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_ApproveMaxAmount(address,address) (paths: 5, time: 0.04s, bounds: [])
[PASS] prove_ApproveNonZeroAmount(address,address,uint256) (paths: 6, time: 0.04s, bounds: [])
[PASS] prove_ApproveZeroAmount(address,address) (paths: 5, time: 0.04s, bounds: [])
[PASS] prove_BalanceUpdatedAfterBurn(address,address,uint256) (paths: 7, time: 0.10s, bounds: [])
[PASS] prove_BurnDifferentAccount(address,uint256,address,uint256) (paths: 8, time: 0.13s, bounds: [])
[PASS] prove_BurnFromNonZeroAddress(address,uint256) (paths: 4, time: 0.06s, bounds: [])
[PASS] prove_BurnSameAccount(address,uint256) (paths: 3, time: 0.06s, bounds: [])
[PASS] prove_BurnZeroTokens(address) (paths: 3, time: 0.04s, bounds: [])
[PASS] prove_ConsecutiveApprovePositiveToPositive(address,address,uint256,uint256) (paths: 5, time: 0.06s, bounds: [])
[PASS] prove_DecreaseAllowance(address,uint256) (paths: 4, time: 0.09s, bounds: [])
[PASS] prove_IncreaseAllowance(address,uint256) (paths: 3, time: 0.08s, bounds: [])
[PASS] prove_Mint(address,uint256) (paths: 3, time: 0.05s, bounds: [])
[PASS] prove_MintZeroTokens(address) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_MsgSenderCanRetrieveOtherBalance(address,uint256) (paths: 5, time: 0.03s, bounds: [])
[PASS] prove_MsgSenderCanRetrieveOwnBalance(uint256) (paths: 1, time: 0.02s, bounds: [])
[PASS] prove_MsgSenderCanTransferTotalBalance(address,address,uint256) (paths: 7, time: 0.09s, bounds: [])
[PASS] prove_MsgSenderCanTransferTotalBalanceZero(address,address) (paths: 6, time: 0.07s, bounds: [])
[PASS] prove_MultipleTransferFromAllowed(address,address,address,uint256,uint256) (paths: 16, time: 0.31s, bounds: [])
[PASS] prove_MultipleTransferFromsOfZeroAmountAllowed(address,address,address,uint8) (paths: 15, time: 0.18s, bounds: [])
[PASS] prove_MultipleTransfersAllowed(address,address,uint256,uint256) (paths: 9, time: 0.13s, bounds: [])
[PASS] prove_MultipleTransfersOfZeroAmountAllowed(address,address,uint8) (paths: 11, time: 0.17s, bounds: [])
[PASS] prove_SelfApproveAndTransferFromOwnAccount(address,address,uint256) (paths: 10, time: 0.17s, bounds: [])
[PASS] prove_SelfApproveAndTransferFromOwnAccountZeroAmountAllowed(address,address) (paths: 6, time: 0.09s, bounds: [])
[PASS] prove_SelfApprovePositiveAmount(address,uint256) (paths: 4, time: 0.04s, bounds: [])
[PASS] prove_SelfApproveZeroAmountAllowed(address) (paths: 3, time: 0.04s, bounds: [])
[PASS] prove_SelfTransferPositiveAmountAllowed(address,uint256) (paths: 4, time: 0.06s, bounds: [])
[PASS] prove_SelfTransferZeroAmountAllowed(address) (paths: 3, time: 0.04s, bounds: [])
[PASS] prove_TokenReceiverCanTransferFromTotalBalance(address,address,uint256) (paths: 10, time: 0.17s, bounds: [])
[PASS] prove_TokenReceiverCanTransferFromTotalBalanceZero(address,address,address) (paths: 10, time: 0.11s, bounds: [])
[PASS] prove_Transfer(address,uint256,uint256) (paths: 6, time: 0.10s, bounds: [])
[PASS] prove_TransferDoesNotUpdateOtherBalances(address,address,address,uint256) (paths: 4, time: 0.14s, bounds: [])
[PASS] prove_TransferFrom(address,address,uint256,uint256) (paths: 7, time: 0.16s, bounds: [])
[PASS] prove_TransferFromAllowanceReachesZero(address,address,address,uint256,uint256) (paths: 15, time: 0.20s, bounds: [])
[PASS] prove_TransferFromDecreasesAllowance(address,address,address,uint256) (paths: 4, time: 0.14s, bounds: [])
[PASS] prove_TransferFromDoesNotUpdateOtherBalances(address,address,address,address,uint256) (paths: 18, time: 0.17s, bounds: [])
[PASS] prove_TransferFromNoFees(address,address,address,uint256) (paths: 12, time: 0.17s, bounds: [])
[PASS] prove_TransferFromZeroAmount(address,address,address) (paths: 8, time: 0.19s, bounds: [])
[ERROR] prove_TransferFromZeroAmountToZeroAddressReverts(address,address) (paths: 6, time: 0.05s, bounds: [])
[PASS] prove_TransferZeroAmount(address,address) (paths: 6, time: 0.07s, bounds: [])
[ERROR] prove_TransferZeroAmountToZeroAddressReverts(address) (paths: 3, time: 0.01s, bounds: [])
[PASS] prove_ZeroAddressHasNoToken() (paths: 1, time: 0.01s, bounds: [])




*------------------------------------------------------------------------------------------------------------






[PASS] proveFail_ApproveWhenIdHasNotAnOwner(address,uint256) (paths: 2, time: 0.02s, bounds: [])
[PASS] proveFail_ApproveWhenIsNotApprovedForAll(address,address,uint256) (paths: 7, time: 0.09s, bounds: [])
[PASS] proveFail_Burn(uint256) (paths: 1, time: 0.01s, bounds: [])
[PASS] proveFail_MintWhenToIsAddressZero(address,uint256) (paths: 3, time: 0.01s, bounds: [])
[PASS] proveFail_setApprovalForAll(address,address,bool) (paths: 5, time: 0.04s, bounds: [])
[PASS] proveFail_transferFromWhenFromIsNotTheOwner(address,address,uint256) (paths: 5, time: 0.03s, bounds: [])
[PASS] proveFail_transferFromWhenToIsAddressZero(address,address,uint256) (paths: 6, time: 0.07s, bounds: [])
[PASS] prove_ApproveWhenIsApprovedForAllOnwerDifferentFromMSGSender(address,uint256) (paths: 4, time: 0.08s, bounds: [])
[PASS] prove_ApproveWhenOwnerEqualsMSGSender(address,uint256) (paths: 2, time: 0.05s, bounds: [])
[PASS] prove_Burn(uint256) (paths: 1, time: 0.06s, bounds: [])
[PASS] prove_Mint(address,uint256) (paths: 3, time: 0.05s, bounds: [])
Counterexample: 
    p_from_address = 0x00000000000000000000000000000000aaaa0000
    p_tokenId_uint256 = 0x0000000000000000000000000000000000000000000000000000000000000000 (0)
[FAIL] prove_safeTransferFrom(address,uint256) (paths: 4, time: 0.12s, bounds: [])
[PASS] prove_setApprovalForAll(address,bool) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_transferFrom(address,address,uint256) (paths: 7, time: 0.14s, bounds: [])
[PASS] proveFail_ApproveWhenIdHasNotAnOwner(address,uint256) (paths: 2, time: 0.02s, bounds: [])
[PASS] proveFail_ApproveWhenIsNotApprovedForAll(address,address,uint256) (paths: 7, time: 0.09s, bounds: [])
[PASS] proveFail_Burn(uint256) (paths: 1, time: 0.01s, bounds: [])
[PASS] proveFail_MintWhenToIsAddressZero(address,uint256) (paths: 3, time: 0.01s, bounds: [])
[PASS] proveFail_setApprovalForAll(address,address,bool) (paths: 5, time: 0.04s, bounds: [])
[PASS] proveFail_transferFromWhenFromIsNotTheOwner(address,address,uint256) (paths: 5, time: 0.03s, bounds: [])
[PASS] proveFail_transferFromWhenToIsAddressZero(address,address,uint256) (paths: 6, time: 0.08s, bounds: [])
[PASS] prove_ApproveWhenIsApprovedForAllOnwerDifferentFromMSGSender(address,uint256) (paths: 4, time: 0.09s, bounds: [])
[PASS] prove_ApproveWhenOwnerEqualsMSGSender(address,uint256) (paths: 2, time: 0.05s, bounds: [])
[PASS] prove_Burn(uint256) (paths: 1, time: 0.07s, bounds: [])
[PASS] prove_Mint(address,uint256) (paths: 3, time: 0.05s, bounds: [])
Counterexample: 
    p_from_address = 0x00000000000000000000000000000000aaaa0000
    p_tokenId_uint256 = 0x0000000000000000000000000000000000000000000000000000000000000000 (0)
[FAIL] prove_safeTransferFrom(address,uint256) (paths: 4, time: 0.12s, bounds: [])
[PASS] prove_setApprovalForAll(address,bool) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_transferFrom(address,address,uint256) (paths: 7, time: 0.15s, bounds: [])
Symbolic test result: 13 passed; 1 failed; time: 1.11s
[PASS] proveFail_ApproveWhenIdHasNotAnOwner(address,uint256) (paths: 2, time: 0.02s, bounds: [])
[PASS] proveFail_ApproveWhenIsNotApprovedForAll(address,address,uint256) (paths: 7, time: 0.09s, bounds: [])
[PASS] proveFail_Burn(uint256) (paths: 1, time: 0.01s, bounds: [])
[PASS] proveFail_MintWhenToIsAddressZero(address,uint256) (paths: 3, time: 0.01s, bounds: [])
[PASS] proveFail_setApprovalForAll(address,address,bool) (paths: 6, time: 0.06s, bounds: [])
[PASS] proveFail_transferFromWhenFromIsNotTheOwner(address,address,uint256) (paths: 5, time: 0.03s, bounds: [])
[PASS] proveFail_transferFromWhenToIsAddressZero(address,address,uint256) (paths: 6, time: 0.07s, bounds: [])
[PASS] prove_ApproveWhenIsApprovedForAllOnwerDifferentFromMSGSender(address,uint256) (paths: 4, time: 0.09s, bounds: [])
[PASS] prove_ApproveWhenOwnerEqualsMSGSender(address,uint256) (paths: 2, time: 0.05s, bounds: [])
[PASS] prove_Burn(uint256) (paths: 1, time: 0.07s, bounds: [])
[PASS] prove_Mint(address,uint256) (paths: 3, time: 0.05s, bounds: [])
Counterexample: 
    p_from_address = 0x00000000000000000000000000000000aaaa0000
    p_tokenId_uint256 = 0x0000000000000000000000000000000000000000000000000000000000000000 (0)
[FAIL] prove_safeTransferFrom(address,uint256) (paths: 4, time: 0.13s, bounds: [])
[PASS] prove_setApprovalForAll(address,bool) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_transferFrom(address,address,uint256) (paths: 7, time: 0.16s, bounds: [])
Symbolic test result: 13 passed; 1 failed; time: 1.15s
[PASS] proveFail_ApproveWhenIdHasNotAnOwner(address,uint256) (paths: 2, time: 0.02s, bounds: [])
[PASS] proveFail_ApproveWhenIsNotApprovedForAll(address,address,uint256) (paths: 7, time: 0.09s, bounds: [])
[PASS] proveFail_Burn(uint256) (paths: 1, time: 0.01s, bounds: [])
[PASS] proveFail_MintWhenToIsAddressZero(address,uint256) (paths: 3, time: 0.01s, bounds: [])
[PASS] proveFail_setApprovalForAll(address,address,bool) (paths: 6, time: 0.06s, bounds: [])
[PASS] proveFail_transferFromWhenFromIsNotTheOwner(address,address,uint256) (paths: 5, time: 0.03s, bounds: [])
[PASS] proveFail_transferFromWhenToIsAddressZero(address,address,uint256) (paths: 6, time: 0.07s, bounds: [])
[PASS] prove_ApproveWhenIsApprovedForAllOnwerDifferentFromMSGSender(address,uint256) (paths: 4, time: 0.09s, bounds: [])
[PASS] prove_ApproveWhenOwnerEqualsMSGSender(address,uint256) (paths: 2, time: 0.05s, bounds: [])
[PASS] prove_Burn(uint256) (paths: 1, time: 0.07s, bounds: [])
[PASS] prove_Mint(address,uint256) (paths: 3, time: 0.05s, bounds: [])
Counterexample: 
    p_from_address = 0x00000000000000000000000000000000aaaa0000
    p_tokenId_uint256 = 0x0000000000000000000000000000000000000000000000000000000000000000 (0)
[FAIL] prove_safeTransferFrom(address,uint256) (paths: 4, time: 0.13s, bounds: [])
[PASS] prove_setApprovalForAll(address,bool) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_transferFrom(address,address,uint256) (paths: 7, time: 0.15s, bounds: [])
Symbolic test result: 13 passed; 1 failed; time: 1.15s
[PASS] proveFail_ApproveWhenIdHasNotAnOwner(address,uint256) (paths: 2, time: 0.02s, bounds: [])
[PASS] proveFail_ApproveWhenIsNotApprovedForAll(address,address,uint256) (paths: 7, time: 0.09s, bounds: [])
[PASS] proveFail_Burn(uint256) (paths: 1, time: 0.01s, bounds: [])
[PASS] proveFail_MintWhenToIsAddressZero(address,uint256) (paths: 3, time: 0.01s, bounds: [])
[PASS] proveFail_setApprovalForAll(address,address,bool) (paths: 6, time: 0.06s, bounds: [])
[PASS] proveFail_transferFromWhenFromIsNotTheOwner(address,address,uint256) (paths: 5, time: 0.03s, bounds: [])
[PASS] proveFail_transferFromWhenToIsAddressZero(address,address,uint256) (paths: 6, time: 0.07s, bounds: [])
[PASS] prove_ApproveWhenIsApprovedForAllOnwerDifferentFromMSGSender(address,uint256) (paths: 4, time: 0.09s, bounds: [])
[PASS] prove_ApproveWhenOwnerEqualsMSGSender(address,uint256) (paths: 2, time: 0.05s, bounds: [])
[PASS] prove_Burn(uint256) (paths: 1, time: 0.07s, bounds: [])
[PASS] prove_Mint(address,uint256) (paths: 3, time: 0.05s, bounds: [])
Counterexample: 
    p_from_address = 0x00000000000000000000000000000000aaaa0000
    p_tokenId_uint256 = 0x0000000000000000000000000000000000000000000000000000000000000000 (0)
[FAIL] prove_safeTransferFrom(address,uint256) (paths: 4, time: 0.12s, bounds: [])
[PASS] prove_setApprovalForAll(address,bool) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_transferFrom(address,address,uint256) (paths: 7, time: 0.15s, bounds: [])
[PASS] proveFail_ApproveWhenIdHasNotAnOwner(address,uint256) (paths: 2, time: 0.02s, bounds: [])
[PASS] proveFail_ApproveWhenIsNotApprovedForAll(address,address,uint256) (paths: 7, time: 0.09s, bounds: [])
[PASS] proveFail_Burn(uint256) (paths: 1, time: 0.01s, bounds: [])
[PASS] proveFail_MintWhenToIsAddressZero(address,uint256) (paths: 3, time: 0.01s, bounds: [])
[PASS] proveFail_setApprovalForAll(address,address,bool) (paths: 6, time: 0.06s, bounds: [])
[PASS] proveFail_transferFromWhenFromIsNotTheOwner(address,address,uint256) (paths: 5, time: 0.03s, bounds: [])
[PASS] proveFail_transferFromWhenToIsAddressZero(address,address,uint256) (paths: 6, time: 0.07s, bounds: [])
[PASS] prove_ApproveWhenIsApprovedForAllOnwerDifferentFromMSGSender(address,uint256) (paths: 4, time: 0.08s, bounds: [])
[PASS] prove_ApproveWhenOwnerEqualsMSGSender(address,uint256) (paths: 2, time: 0.05s, bounds: [])
[PASS] prove_Burn(uint256) (paths: 1, time: 0.07s, bounds: [])
[PASS] prove_Mint(address,uint256) (paths: 3, time: 0.05s, bounds: [])
Counterexample: 
    p_from_address = 0x00000000000000000000000000000000aaaa0000
    p_tokenId_uint256 = 0x0000000000000000000000000000000000000000000000000000000000000000 (0)
[FAIL] prove_safeTransferFrom(address,uint256) (paths: 4, time: 0.12s, bounds: [])
[PASS] prove_setApprovalForAll(address,bool) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_transferFrom(address,address,uint256) (paths: 7, time: 0.15s, bounds: [])
[PASS] proveFail_ApproveWhenIdHasNotAnOwner(address,uint256) (paths: 2, time: 0.02s, bounds: [])
[PASS] proveFail_ApproveWhenIsNotApprovedForAll(address,address,uint256) (paths: 7, time: 0.09s, bounds: [])
[PASS] proveFail_Burn(uint256) (paths: 1, time: 0.01s, bounds: [])
[PASS] proveFail_MintWhenToIsAddressZero(address,uint256) (paths: 3, time: 0.01s, bounds: [])
[PASS] proveFail_setApprovalForAll(address,address,bool) (paths: 6, time: 0.06s, bounds: [])
[PASS] proveFail_transferFromWhenFromIsNotTheOwner(address,address,uint256) (paths: 5, time: 0.03s, bounds: [])
[PASS] proveFail_transferFromWhenToIsAddressZero(address,address,uint256) (paths: 6, time: 0.07s, bounds: [])
[PASS] prove_ApproveWhenIsApprovedForAllOnwerDifferentFromMSGSender(address,uint256) (paths: 4, time: 0.08s, bounds: [])
[PASS] prove_ApproveWhenOwnerEqualsMSGSender(address,uint256) (paths: 2, time: 0.05s, bounds: [])
[PASS] prove_Burn(uint256) (paths: 1, time: 0.07s, bounds: [])
[PASS] prove_Mint(address,uint256) (paths: 3, time: 0.05s, bounds: [])
Counterexample: 
    p_from_address = 0x00000000000000000000000000000000aaaa0000
    p_tokenId_uint256 = 0x0000000000000000000000000000000000000000000000000000000000000000 (0)
[FAIL] prove_safeTransferFrom(address,uint256) (paths: 4, time: 0.12s, bounds: [])
[PASS] prove_setApprovalForAll(address,bool) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_transferFrom(address,address,uint256) (paths: 7, time: 0.15s, bounds: [])
Symbolic test result: 13 passed; 1 failed; time: 1.12s
[PASS] proveFail_ApproveWhenIdHasNotAnOwner(address,uint256) (paths: 2, time: 0.02s, bounds: [])
[PASS] proveFail_ApproveWhenIsNotApprovedForAll(address,address,uint256) (paths: 7, time: 0.09s, bounds: [])
[PASS] proveFail_Burn(uint256) (paths: 1, time: 0.01s, bounds: [])
[PASS] proveFail_MintWhenToIsAddressZero(address,uint256) (paths: 3, time: 0.01s, bounds: [])
[PASS] proveFail_setApprovalForAll(address,address,bool) (paths: 6, time: 0.06s, bounds: [])
[PASS] proveFail_transferFromWhenFromIsNotTheOwner(address,address,uint256) (paths: 5, time: 0.03s, bounds: [])
[PASS] proveFail_transferFromWhenToIsAddressZero(address,address,uint256) (paths: 6, time: 0.07s, bounds: [])
[PASS] prove_ApproveWhenIsApprovedForAllOnwerDifferentFromMSGSender(address,uint256) (paths: 4, time: 0.09s, bounds: [])
[PASS] prove_ApproveWhenOwnerEqualsMSGSender(address,uint256) (paths: 2, time: 0.05s, bounds: [])
[PASS] prove_Burn(uint256) (paths: 1, time: 0.07s, bounds: [])
[PASS] prove_Mint(address,uint256) (paths: 3, time: 0.05s, bounds: [])
Counterexample: 
    p_from_address = 0x00000000000000000000000000000000aaaa0000
    p_tokenId_uint256 = 0x0000000000000000000000000000000000000000000000000000000000000000 (0)
[FAIL] prove_safeTransferFrom(address,uint256) (paths: 4, time: 0.12s, bounds: [])
[PASS] prove_setApprovalForAll(address,bool) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_transferFrom(address,address,uint256) (paths: 7, time: 0.15s, bounds: [])
Symbolic test result: 13 passed; 1 failed; time: 1.11s
[PASS] proveFail_ApproveWhenIdHasNotAnOwner(address,uint256) (paths: 2, time: 0.02s, bounds: [])
[PASS] proveFail_ApproveWhenIsNotApprovedForAll(address,address,uint256) (paths: 7, time: 0.09s, bounds: [])
[PASS] proveFail_Burn(uint256) (paths: 1, time: 0.01s, bounds: [])
[PASS] proveFail_MintWhenToIsAddressZero(address,uint256) (paths: 3, time: 0.01s, bounds: [])
[PASS] proveFail_setApprovalForAll(address,address,bool) (paths: 5, time: 0.04s, bounds: [])
[PASS] proveFail_transferFromWhenFromIsNotTheOwner(address,address,uint256) (paths: 5, time: 0.03s, bounds: [])
[PASS] proveFail_transferFromWhenToIsAddressZero(address,address,uint256) (paths: 6, time: 0.07s, bounds: [])
[PASS] prove_ApproveWhenIsApprovedForAllOnwerDifferentFromMSGSender(address,uint256) (paths: 4, time: 0.08s, bounds: [])
[PASS] prove_ApproveWhenOwnerEqualsMSGSender(address,uint256) (paths: 2, time: 0.05s, bounds: [])
[PASS] prove_Burn(uint256) (paths: 1, time: 0.06s, bounds: [])
[PASS] prove_Mint(address,uint256) (paths: 3, time: 0.05s, bounds: [])
Counterexample: 
    p_from_address = 0x00000000000000000000000000000000aaaa0000
    p_tokenId_uint256 = 0x0000000000000000000000000000000000000000000000000000000000000000 (0)
[FAIL] prove_safeTransferFrom(address,uint256) (paths: 4, time: 0.12s, bounds: [])
[PASS] prove_setApprovalForAll(address,bool) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_transferFrom(address,address,uint256) (paths: 7, time: 0.14s, bounds: [])
Symbolic test result: 13 passed; 1 failed; time: 1.08s

Running 1 tests for src/openzeppelin-contracts/lib/forge-std/lib/ds-test/demo/demo.sol:DemoTest
[PASS] prove_this(uint256) (paths: 2, time: 0.04s, bounds: [])
Symbolic test result: 1 passed; 0 failed; time: 0.08s
[PASS] proveFail_ApproveWhenIdHasNotAnOwner(address,uint256) (paths: 2, time: 0.02s, bounds: [])
[PASS] proveFail_ApproveWhenIsNotApprovedForAll(address,address,uint256) (paths: 7, time: 0.09s, bounds: [])
[PASS] proveFail_Burn(uint256) (paths: 1, time: 0.01s, bounds: [])
[PASS] proveFail_MintWhenToIsAddressZero(address,uint256) (paths: 3, time: 0.01s, bounds: [])
[PASS] proveFail_setApprovalForAll(address,address,bool) (paths: 6, time: 0.06s, bounds: [])
[PASS] proveFail_transferFromWhenFromIsNotTheOwner(address,address,uint256) (paths: 5, time: 0.03s, bounds: [])
[PASS] proveFail_transferFromWhenToIsAddressZero(address,address,uint256) (paths: 6, time: 0.07s, bounds: [])
[PASS] prove_ApproveWhenIsApprovedForAllOnwerDifferentFromMSGSender(address,uint256) (paths: 4, time: 0.08s, bounds: [])
[PASS] prove_ApproveWhenOwnerEqualsMSGSender(address,uint256) (paths: 2, time: 0.05s, bounds: [])
[PASS] prove_Burn(uint256) (paths: 1, time: 0.06s, bounds: [])
[PASS] prove_Mint(address,uint256) (paths: 3, time: 0.05s, bounds: [])
Counterexample: 
    p_from_address = 0x00000000000000000000000000000000aaaa0000
    p_tokenId_uint256 = 0x0000000000000000000000000000000000000000000000000000000000000000 (0)
[FAIL] prove_safeTransferFrom(address,uint256) (paths: 4, time: 0.12s, bounds: [])
[PASS] prove_setApprovalForAll(address,bool) (paths: 3, time: 0.03s, bounds: [])
[PASS] prove_transferFrom(address,address,uint256) (paths: 7, time: 0.15s, bounds: [])
Symbolic test result: 13 passed; 1 failed; time: 1.11s